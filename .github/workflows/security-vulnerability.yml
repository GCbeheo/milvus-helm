name: trivy-security-scanning
on: push

permissions:
  security-events: write

jobs:
  trivy-scan-helm-chart-config:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0

      - name: Export full yaml config of helm chart
        run: |
          cd charts/milvus
          helm template . > full.yaml

      - name: Run Trivy vulnerability scanner in IaC mode
        uses: aquasecurity/trivy-action@0.20.0
        with:
          scan-type: 'config'
          hide-progress: false
          format: 'sarif'
          scan-ref: 'charts/milvus/full.yaml'
          output: 'trivy-results.sarif'
          exit-code: '0'
          ignore-unfixed: true

      - name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  images-scan:
    needs: trivy-scan-helm-chart-config
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0

      - name: Take list all images in side helm chart
        run: |
          cd charts/milvus
          yq eval '.annotations.images' Chart.yaml | grep 'image: ' | awk '{print $2}' > chart_images.txt
          helm template . \
              | yq '..|.image? | select(.)' \
              | grep -v '^---$' \
              | sort -u > template_images.txt
          cat chart_images.txt template_images.txt | sort -u > all_images.txt
          rm -rf chart_images.txt template_images.txt

      - name: Setup Docker
        uses: docker/setup-buildx-action@v3

      - name: Ensure write permissions for trivy-reports
        run: |
          mkdir -p trivy-reports
          chmod -R 777 trivy-reports

      - name: Trivy scan all images in helm chart
        run: |
          while read -r image; do
            echo "Scanning $image"
            docker pull $image
            docker run --rm -v $(pwd)/trivy-reports:/trivy-reports aquasec/trivy image --exit-code 0 --format sarif -o /trivy-reports/trivy-results-${image//\//-}.sarif $image
          done < charts/milvus/all_images.txt

      - name: Combine SARIF files
        run: |
          jq -s '{"version": "2.1.0", "runs": map(.runs[]) }' trivy-reports/*.sarif > trivy-reports/combined-results.sarif

      - name: Upload all Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-reports/combined-results.sarif'