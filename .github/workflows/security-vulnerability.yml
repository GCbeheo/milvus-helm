name: trivy-security-scanning
on: push

permissions:
  security-events: write

jobs:
#  trivy-scan:
#    runs-on: ubuntu-latest
#    steps:
#      - name: Checkout
#        uses: actions/checkout@v4
#
#      - name: Run Trivy vulnerability scanner in IaC mode
  #        uses: aquasecurity/trivy-action@0.20.0
#        with:
#          scan-type: 'config'
#          hide-progress: false
#          format: 'sarif'
#          scan-ref: 'charts/milvus/full.yaml'
#          output: 'trivy-results.sarif'
#          exit-code: '0'
#          ignore-unfixed: true
#
#      - name: Upload Trivy scan results to GitHub Security tab
#        uses: github/codeql-action/upload-sarif@v3
#        with:
#          sarif_file: 'trivy-results.sarif'

  images-scan:
#    needs: trivy-scan
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Helm
        uses: azure/setup-helm@v4.2.0

      - name: Take list all images in side helm chart
        run: |
          cd charts/milvus
          yq eval '.annotations.images' Chart.yaml | grep 'image: ' | awk '{print $2}' > chart_images.txt
          helm template . \
              | yq '..|.image? | select(.)' \
              | sort -u > template_images.txt
          cat chart_images.txt template_images.txt | sort -u > all_images.txt
          rm -rf chart_images.txt template_images.txt

      - name: Trivy scan all images in helm chart
        run: |
          while read -r image; do
            echo "Scanning $image"
            docker pull $image
            docker run --rm -v $(pwd):/root/.cache/ aquasec/trivy image --exit-code 0 --format sarif -o trivy-results-${image//\//-}.sarif $image
          done < charts/milvus/all_images.txt

      - name: Upload all Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'charts/milvus/*.sarif'